{"version":3,"sources":["../src/routes.js"],"names":["express","require","router","Router","users","firstName","lastName","role","password","email","id","db","MongoClient","connect","url","err","client","console","log","get","req","res","collection","save","body","result","redirect","user","i","length","params","json","post","push","error","status","send","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;;AAEA,IAAMC,QAAM,CACV;AACEC,aAAW,QADb;AAEEC,YAAU,QAFZ;AAGEC,QAAM,YAHR;AAIEC,YAAU,cAJZ;AAKEC,SAAO,yBALT;AAMEC,MAAI;AANN,CADU,EASV;AACEL,aAAW,QADb;AAEEC,YAAU,UAFZ;AAGEC,QAAM,YAHR;AAIEC,YAAU,gBAJZ;AAKEC,SAAO,2BALT;AAMEC,MAAI;AANN,CATU,EAiBV;AACEL,aAAW,MADb;AAEEC,YAAU,QAFZ;AAGEC,QAAM,OAHR;AAIEC,YAAU,gBAJZ;AAKEC,SAAO,2BALT;AAMEC,MAAI;AANN,CAjBU,CAAZ;;AA2BA;;;;AAIA,IAAIC,EAAJ;;AAEAC,YAAYC,OAAZ,CAAoBC,GAApB,EAAyB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACxC,MAAID,GAAJ,EAAS,OAAOE,QAAQC,GAAR,CAAYH,GAAZ,CAAP;AACTJ,OAAKK,OAAOL,EAAP,CAAU,OAAV,CAAL,CAFwC,CAEhB;AACxB;AACA;AACA;AACD,CAND;;AAQAT,OAAOiB,GAAP,CAAW,QAAX,EAAqB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACvCV,KAAGW,UAAH,CAAc,QAAd,EAAwBC,IAAxB,CAA6BH,IAAII,IAAjC,EAAuC,UAACT,GAAD,EAAMU,MAAN,EAAiB;AACtD,QAAIV,GAAJ,EAAS,OAAOE,QAAQC,GAAR,CAAYH,GAAZ,CAAP;;AAETE,YAAQC,GAAR,CAAY,mBAAZ;AACAG,QAAIK,QAAJ,CAAa,GAAb;AACD,GALD;AAMD,CAPD;;AASAxB,OAAOiB,GAAP,CAAW,YAAX,EAAyB,UAASC,GAAT,EAAaC,GAAb,EAAkB;AACzC,MAAIM,OAAO,EAAX;AACA,OAAI,IAAIC,IAAE,CAAV,EAAaA,IAAExB,MAAMyB,MAArB,EAA4BD,GAA5B,EAAgC;AAC9B,QAAIxB,MAAMwB,CAAN,EAASlB,EAAT,KAAgBU,IAAIU,MAAJ,CAAWpB,EAA/B,EAAmCiB,OAAOvB,MAAMwB,CAAN,CAAP;AACpC;AACDP,MAAIU,IAAJ,CAAS,EAACJ,UAAD,EAAT;AACD,CAND;;AAQAzB,OAAO8B,IAAP,CAAY,YAAZ,EAA0B,UAASZ,GAAT,EAAaC,GAAb,EAAkB;AAC1C,MAAI;AACFjB,UAAM6B,IAAN,CAAWb,IAAII,IAAf;AACA;AACD,GAHD,CAGE,OAAOU,KAAP,EAAc;AACdb,QAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEF,YAAF,EAArB;AACD;AACF,CAPD;;AASAG,OAAOC,OAAP,GAAiBpC,MAAjB","file":"routes.js","sourcesContent":["const express = require('express');\nconst router = express.Router();\n\nconst users=[\n  {\n    firstName: \"Damien\",\n    lastName: \"Dubois\",\n    role: \"SimpleUser\",\n    password: \"DamienDubois\",\n    email: \"damien.dubois@gmail.com\",\n    id: 0,\n  },\n  {\n    firstName: \"Audrey\",\n    lastName: \"Quintard\",\n    role: \"SimpleUser\",\n    password: \"AudreyQuintard\",\n    email: \"audrey.quintard@gmail.com\",\n    id: 1,\n  },\n  {\n    firstName: \"StÃ©f\",\n    lastName: \"Guinot\",\n    role: \"Admin\",\n    password: \"StephaneGuinot\",\n    email: \"stephane.guinot@gmail.com\",\n    id: 2,\n  }\n];\n\n/**\n * BEGIN MODIFICATIONS\n */\n\nvar db\n\nMongoClient.connect(url, (err, client) => {\n  if (err) return console.log(err)\n  db = client.db('users') // whatever your database name is\n  // router.listen(5000, () => {\n  //   console.log('listening on 5000')\n  // })\n})\n\nrouter.get('/users', function (req, res) {\n  db.collection('quotes').save(req.body, (err, result) => {\n    if (err) return console.log(err)\n\n    console.log('saved to database')\n    res.redirect('/')\n  })\n});\n\nrouter.get('/users/:id', function(req,res) {\n  let user = {};\n  for(let i=0; i<users.length;i++){\n    if (users[i].id === req.params.id) user = users[i];\n  }\n  res.json({user})\n})\n\nrouter.post('/users/new', function(req,res) {\n  try {\n    users.push(req.body)\n    // res.send({ id });\n  } catch (error) {\n    res.status(500).send({ error })\n  }\n});\n\nmodule.exports = router;\n"]}