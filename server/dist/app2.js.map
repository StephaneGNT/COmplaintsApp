{"version":3,"sources":["../src/app2.js"],"names":["mongoose","require","express","bodyParser","app","listen","mongoDB","connect","Promise","global","db","connection","on","console","error","bind","userSchema","Schema","firstName","String","lastName","role","password","email","Users","model","get","req","res","send","log","find","response","docs","json"],"mappings":";;AAAA;AACA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;;AAEA;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,IAAME,aAAYF,QAAQ,aAAR,CAAlB;AACA,IAAMG,MAAMF,SAAZ;;AAEAE,IAAIC,MAAJ,CAAW,IAAX;;AAEA;AACA,IAAIC,UAAU,yCAAd;AACAN,SAASO,OAAT,CAAiBD,OAAjB;AACA;AACAN,SAASQ,OAAT,GAAmBC,OAAOD,OAA1B;AACA;AACA,IAAIE,KAAKV,SAASW,UAAlB;;AAEA;AACAD,GAAGE,EAAH,CAAM,OAAN,EAAeC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,2BAA5B,CAAf;;AAEA;AACA,IAAIG,aAAa,IAAIhB,SAASiB,MAAb,CAAoB;AACnCC,aAAWC,MADwB;AAEnCC,YAAUD,MAFyB;AAGnCE,QAAMF,MAH6B;AAInCG,YAAUH,MAJyB;AAKnCI,SAAMJ;AAL6B,CAApB,CAAjB;;AAQA;AACA,IAAIK,QAAQxB,SAASyB,KAAT,CAAe,MAAf,EAAuBT,UAAvB,CAAZ;;AAEAZ,IAAIsB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIC,IAAJ,CAAS,gBAAT;AACD,CAFD;;AAIAzB,IAAIsB,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9Bf,UAAQiB,GAAR,CAAY,qBAAZ;AACAN,QAAMO,IAAN,CAAW,EAAX,EAAc,UAACC,QAAD,EAAWC,IAAX,EAAoB;AAChCpB,YAAQiB,GAAR,CAAY,MAAZ,EAAoBG,IAApB;AACAL,QAAIM,IAAJ,CAASD,IAAT;AACA;AACD,GAJD;AAKD,CAPD;;AASA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"app2.js","sourcesContent":["//Import the mongoose module\nvar mongoose = require('mongoose');\n\n// Set up express app\nconst express = require('express');\nconst bodyParser= require('body-parser');\nconst app = express();\n\napp.listen(5000);\n\n//Set up default mongoose connection\nvar mongoDB = 'mongodb://localhost:27017/ComplaintsApp';\nmongoose.connect(mongoDB);\n// Get Mongoose to use the global promise library\nmongoose.Promise = global.Promise;\n//Get the default connection\nvar db = mongoose.connection;\n\n//Bind connection to error event (to get notification of connection errors)\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\n\n/* Création du User Schema selon les schémas mongoose */\nvar userSchema = new mongoose.Schema({\n  firstName: String,\n  lastName: String,\n  role: String,\n  password: String,\n  email:String,\n});\n\n/* Création du User model selon le schéma créé */\nvar Users = mongoose.model('User', userSchema);\n\napp.get('/', (req, res) => {\n  res.send(\"Server started\")\n});\n\napp.get('/users', (req, res) => {\n  console.log(\" app get in backend\")\n  Users.find({},(response, docs) => {\n    console.log(\"docs\", docs)\n    res.json(docs);\n    // return (docs);\n  }); \n})\n\n// Users.find((response, docs) => {\n//   // console.log(\"docs\", docs);\n// });\n\n\n// /* Création d'un user (local) à partir du modèle user */\n// var DamienDubois = new Users({\n//   firstName: 'Damien',\n//   lastName: 'Dubois',\n//   role: 'SimpleUser',\n//   password: 'DamienDubois',\n//   email: 'damien.dubois@gmail.com'\n// });\n\n// /* Ajout du User à la collection Users de la DB */\n// DamienDubois.save(err => {\n//   if (err) console.log(err);\n//   else console.log(\"user saved\")\n// })"]}